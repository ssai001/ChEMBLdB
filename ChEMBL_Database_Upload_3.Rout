
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #General setup
> library(RSQLite)
> setwd("/rhome/ssai001/bigdata")
> mydb <- dbConnect(SQLite(), dbname= "chembl_24.db")
> 
> 
> #Selecting required tables from database
> table1 <- as.data.frame(dbGetQuery(mydb, 'SELECT assay_id, doc_id, record_id, molregno, standard_value, standard_units, standard_type, bao_endpoint, src_id FROM activities')) 
Warning message:
In result_fetch(res@ptr, n = n) :
  Column `standard_value`: mixed type, first seen values of type real, coercing other values of type integer64
> table2 <- as.data.frame(dbGetQuery(mydb, 'SELECT assay_id, standard_type, standard_value, standard_units FROM assay_parameters'))
Warning message:
In result_fetch(res@ptr, n = n) :
  Column `standard_value`: mixed type, first seen values of type real, coercing other values of type integer64
> table3 <- as.data.frame(dbGetQuery(mydb, 'SELECT assay_id, doc_id, description, assay_organism, tid, src_id, chembl_id, bao_format FROM assays'))
> table4 <- as.data.frame(dbGetQuery(mydb, 'SELECT * FROM binding_sites'))
> table5 <- as.data.frame(dbGetQuery(mydb, 'SELECT molregno, alogp, hba, hbd, psa, rtb, acd_most_apka, acd_most_bpka, acd_logp, acd_logd, molecular_species, full_mwt, qed_weighted, mw_monoisotopic, full_molformula FROM compound_properties'))
> table6 <- as.data.frame(dbGetQuery(mydb, 'SELECT record_id, molregno, doc_id, compound_name, src_id FROM compound_records'))
> table7 <- as.data.frame(dbGetQuery(mydb, 'SELECT * FROM compound_structures'))
> table8 <- as.data.frame(dbGetQuery(mydb, 'SELECT record_id, molregno, mechanism_of_action, tid, site_id, action_type, mechanism_comment, selectivity_comment, binding_site_comment FROM drug_mechanism'))
> table9 <- as.data.frame(dbGetQuery(mydb, 'SELECT molregno, pref_name, chembl_id, max_phase, structure_type, molecule_type, first_approval, oral, parenteral, topical, chirality, indication_class FROM molecule_dictionary'))
> table10 <- as.data.frame(dbGetQuery(mydb, 'SELECT molregno, syn_type, synonyms FROM molecule_synonyms'))
> 
> 
> #Merge all into one dataframe
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(purrr)
> new_csv <- bind_rows(list(table1, table2, table8, table3, table5, table7, table6, table4, table9, table10), .id = "column_label")
> 
> 
> #Upload into DrugbankR database
> library(RSQLite)
> setwd("/rhome/ssai001/bigdata")
> db <- dbConnect(SQLite(), dbname= "drugbank_5.1.0.db")
> dbWriteTable(db, "ChEMBLdB", new_csv, overwrite=TRUE)
> dbListTables(db)
[1] "ChEMBLdB" "dbdf"    
> 
> setwd("/rhome/ssai001/bigdata")
> library(RSQLite)
> db <- dbConnect(SQLite(), dbname= "drugbank_5.1.0.db")
> dbListTables(db)
[1] "ChEMBLdB" "dbdf"    
> colnames(dbGetQuery(db, "SELECT * FROM ChEMBLdB"))
 [1] "column_label"         "assay_id"             "doc_id"               "record_id"            "molregno"             "standard_value"       "standard_units"       "standard_type"        "bao_endpoint"        
[10] "src_id"               "mechanism_of_action"  "tid"                  "site_id"              "action_type"          "mechanism_comment"    "selectivity_comment"  "binding_site_comment" "description"         
[19] "assay_organism"       "chembl_id"            "bao_format"           "alogp"                "hba"                  "hbd"                  "psa"                  "rtb"                  "acd_most_apka"       
[28] "acd_most_bpka"        "acd_logp"             "acd_logd"             "molecular_species"    "full_mwt"             "qed_weighted"         "mw_monoisotopic"      "full_molformula"      "molfile"             
[37] "standard_inchi"       "standard_inchi_key"   "canonical_smiles"     "compound_name"        "site_name"            "pref_name"            "max_phase"            "structure_type"       "molecule_type"       
[46] "first_approval"       "oral"                 "parenteral"           "topical"              "chirality"            "indication_class"     "syn_type"             "synonyms"            
Warning message:
call dbDisconnect() when finished working with a connection 
> nrow(dbGetQuery(db, "SELECT * FROM ChEMBLdB"))
[1] 24453342
> dim(dbGetQuery(db, "SELECT * FROM ChEMBLdB"))
[1] 24453342       53
> 
> 
> 
> #Write querying function based on assay_id
> 
> 
> 
> #Write querying function based on doc_id
> 
> 
> 
> #Write querying function based on record_id
> 
> 
> 
> #Write querying function based on molregno
> 
> 
> 
> #Write querying function based on chembl_id
> 
> 
> 
> 
> 
> 
> 
> proc.time()
    user   system  elapsed 
1248.032  293.118 1551.449 
